from typing import Any, Optional

AbieosContext: Any  # PyCapsule

def bin_to_json(context: AbieosContext, contract: int, abi_type: str, data: bytes, size: int) -> Optional[str]: ...
def create() -> AbieosContext: ...
def destroy(context: AbieosContext) -> None: ...
def get_bin_data(context: AbieosContext) -> bytes: ...
def get_bin_hex(context: AbieosContext) -> str: ...
def get_bin_size(context: AbieosContext) -> int: ...
def get_error(context: AbieosContext) -> str: ...
def get_type_for_action(context: AbieosContext, contract: int, action: int) -> Optional[str]: ...
def get_type_for_table(context: AbieosContext, contract: int, table: int) -> Optional[str]: ...
def hex_to_json(context: AbieosContext, contract: int, abi_type: str, data: str) -> Optional[str]: ...
def json_to_bin(context: AbieosContext, contract: int, abi_type: str, data: str) -> bool: ...
def json_to_bin_reorderable(context: AbieosContext, contract: int, abi_type: str, data: str) -> bool: ...
def name_to_string(context: AbieosContext, name: int) -> str: ...
def set_abi(context: AbieosContext, contract: int, abi: str) -> bool: ...
def set_abi_bin(context: AbieosContext, contract: int, abi: bytes, size: int) -> bool: ...
def set_abi_hex(context: AbieosContext, contract: int, abi: str) -> bool: ...
def string_to_name(context: AbieosContext, string: str) -> int: ...
